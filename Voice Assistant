import speech_recognition as sr
import pyttsx3
import datetime
import wikipediaapi

# Initialize the recognizer and the TTS engine
recognizer = sr.Recognizer()
tts_engine = pyttsx3.init()

# Function to make the assistant speak
def speak(text):
    tts_engine.say(text)
    tts_engine.runAndWait()

# Function to listen for commands
def listen():
    with sr.Microphone() as source:
        print("Listening...")
        recognizer.adjust_for_ambient_noise(source)
        audio = recognizer.listen(source)
        
        try:
            command = recognizer.recognize_google(audio)
            print(f"User said: {command}\n")
        except sr.UnknownValueError:
            speak("Sorry, I did not understand that.")
            command = listen()
        except sr.RequestError:
            speak("Sorry, the speech service is down.")
            command = None
    return command.lower()

# Respond to greeting
def greet():
    hour = datetime.datetime.now().hour
    if 0 <= hour < 12:
        speak("Good morning!")
    elif 12 <= hour < 18:
        speak("Good afternoon!")
    else:
        speak("Good evening!")

# Provide the current time
def tell_time():
    now = datetime.datetime.now().strftime("%H:%M")
    speak(f"The time is {now}")

# Wikipedia search
def search_wikipedia(query):
    wiki = wikipediaapi.Wikipedia('en')
    page = wiki.page(query)
    if page.exists():
        summary = page.summary[:300]
        speak("According to Wikipedia")
        speak(summary)
    else:
        speak("I could not find any information on that topic.")

# Main function to handle commands
def handle_command(command):
    if 'hello' in command or 'hi' in command:
        greet()
    elif 'time' in command:
        tell_time()
    elif 'search' in command:
        speak("What would you like to search for?")
        query = listen()
        search_wikipedia(query)
    else:
        speak("Sorry, I didn't understand that command.")

if _name_ == "_main_":
    speak("How can I help you today?")
    while True:
        command = listen()
        if command:
            handle_command(command)
        if 'exit' in command or 'quit' in command:
            speak("Goodbye!")
            break
